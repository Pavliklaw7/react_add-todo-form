{"version":3,"sources":["components/propTypes/userShape.js","components/TodoItem.jsx","components/propTypes/todoShape.js","components/TodoList.jsx","components/NewTodo.jsx","api/users.js","App.js","api/todos.js","index.js"],"names":["userShape","PropTypes","shape","name","string","id","number","TodoItem","title","completed","bool","user","Table","Row","warning","Cell","TodoList","list","inverted","className","selectable","Header","HeaderCell","Body","map","todo","key","NewTodo","state","userId","isUserUndefined","isTitleUndefined","handleChange","event","target","value","replace","slice","setState","handleSubmit","preventDefault","errors","trim","props","addTodo","render","users","Form","onSubmit","Button","type","Group","widths","Container","Field","control","placeholder","onChange","Component","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","preparedTodo","find","App","useState","setTodos","length","ReactDOM","document","getElementById"],"mappings":"6RAEaA,EAAYC,IAAUC,MAAM,CACvCC,KAAMF,IAAUG,OAChBC,GAAIJ,IAAUK,SCUDC,GCXUN,IAAUC,MAAM,CACvCG,GAAIJ,IAAUK,OACdE,MAAOP,IAAUG,OACjBK,UAAWR,IAAUS,KACrBC,KAAMX,IDHS,SAAC,GAAD,IAAGQ,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAWE,EAArB,EAAqBA,KAArB,OACf,kBAACC,EAAA,EAAMC,IAAP,CAAWC,SAAO,GAChB,kBAACF,EAAA,EAAMG,KAAP,KAAaJ,EAAKR,MAClB,kBAACS,EAAA,EAAMG,KAAP,KAAaN,EAAY,YAAc,cACvC,kBAACG,EAAA,EAAMG,KAAP,KAAaP,MEiBFQ,EAnBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,kBAACL,EAAA,EAAD,CAAOM,UAAQ,EAACC,UAAU,0BAA0BC,YAAU,GAC5D,kBAACR,EAAA,EAAMS,OAAP,KACE,kBAACT,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAMU,WAAP,eACA,kBAACV,EAAA,EAAMU,WAAP,kBACA,kBAACV,EAAA,EAAMU,WAAP,eAGJ,kBAACV,EAAA,EAAMW,KAAP,KACGN,EAAKO,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,eAAUC,IAAKD,EAAKpB,IAAQoB,U,qDCwFrCE,E,4MAlGbC,MAAQ,CACNC,OAAQ,EACRrB,MAAO,GACPsB,iBAAiB,EACjBC,kBAAkB,G,EAGpBC,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBC,EADgB,EAChBA,MAAOhC,EADS,EACTA,KAEf,GAAa,UAATA,EAAkB,CACpB,IAAMK,EAAQ2B,EAAMC,QAAQ,UAAW,IAAIC,MAAM,EAAG,IAEpD,EAAKC,SAAS,CACZ9B,QAAOuB,kBAAkB,QAEtB,CAAC,IAAD,EACL,EAAKO,UAAL,mBACGnC,GAAQgC,GADX,iCACmC,GADnC,M,EAMJI,aAAe,SAACN,GACdA,EAAMO,iBAEN,EAAKF,UAAS,YAAwB,IAArBT,EAAoB,EAApBA,OAAQrB,EAAY,EAAZA,MACjBiC,EAAS,GAKf,OAHAA,EAAOV,iBAAoC,KAAjBvB,EAAMkC,OAChCD,EAAOX,gBAA6B,IAAXD,EAEpBY,EAAOV,kBAAqBU,EAAOX,gBAajCW,GAZL,EAAKE,MAAMC,QAAQ,CACjBf,SACArB,QACAC,WAAW,IAGN,CACLD,MAAO,GACPqB,OAAQ,Q,EAQhBgB,OAAS,WAAO,IACNC,EAAU,EAAKH,MAAfG,MADK,EAEgD,EAAKlB,MAA1DC,EAFK,EAELA,OAAQrB,EAFH,EAEGA,MAAOsB,EAFV,EAEUA,gBAAiBC,EAF3B,EAE2BA,iBAExC,OACE,kBAACgB,EAAA,EAAD,CAAMC,SAAU,EAAKT,cACnB,kBAACQ,EAAA,EAAKE,OAAN,CAAa9B,UAAU,eAAe+B,KAAK,UAA3C,OACA,kBAACH,EAAA,EAAKI,MAAN,CAAYC,OAAO,SACjB,kBAACC,EAAA,EAAD,CAAWlC,UAAU,eAClBY,GACC,0BAAMZ,UAAU,eAAhB,0BAEF,kBAAC4B,EAAA,EAAKO,MAAN,CACEC,QAAQ,QACRpD,KAAK,QACLqD,YAAY,eACZC,SAAU,EAAKzB,aACfG,MAAO3B,KAGX,kBAAC6C,EAAA,EAAD,CAAWlC,UAAU,eAClBW,GACC,0BAAMX,UAAU,eAAhB,wBAEF,kBAAC4B,EAAA,EAAKO,MAAN,CACEC,QAAQ,SACRpD,KAAK,SACLsD,SAAU,EAAKzB,aACfG,MAAON,GAEP,4BAAQM,MAAO,GAAf,iBACCW,EAAMtB,KAAI,gBAAGrB,EAAH,EAAGA,KAAME,EAAT,EAASA,GAAT,OACT,4BAAQqB,IAAKrB,EAAI8B,MAAO9B,GAAxB,UACMA,EADN,aACaF,Y,YAnFPuD,aCoOPZ,G,cAzOD,CACZ,CACEzC,GAAI,EACJF,KAAM,gBACNwD,SAAU,OACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,wBACPC,QAAS,gBACTC,QAAS,CACPpE,KAAM,kBACNqE,YAAa,yCACbC,GAAI,gCAGR,CACEpE,GAAI,EACJF,KAAM,eACNwD,SAAU,YACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,gBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,sBACPC,QAAS,gBACTC,QAAS,CACPpE,KAAM,eACNqE,YAAa,iCACbC,GAAI,qCAGR,CACEpE,GAAI,EACJF,KAAM,mBACNwD,SAAU,WACVC,MAAO,qBACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,YACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,iBACPC,QAAS,cACTC,QAAS,CACPpE,KAAM,qBACNqE,YAAa,oCACbC,GAAI,oCAGR,CACEpE,GAAI,EACJF,KAAM,mBACNwD,SAAU,WACVC,MAAO,4BACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,WACTC,QAAS,CACPpE,KAAM,gBACNqE,YAAa,2CACbC,GAAI,yCAGR,CACEpE,GAAI,EACJF,KAAM,mBACNwD,SAAU,SACVC,MAAO,2BACPC,QAAS,CACPC,OAAQ,eACRC,MAAO,YACPC,KAAM,aACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,gBACPC,QAAS,eACTC,QAAS,CACPpE,KAAM,cACNqE,YAAa,uCACbC,GAAI,qCAGR,CACEpE,GAAI,EACJF,KAAM,uBACNwD,SAAU,mBACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,WACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,uBACPC,QAAS,UACTC,QAAS,CACPpE,KAAM,oBACNqE,YAAa,qCACbC,GAAI,qCAGR,CACEpE,GAAI,EACJF,KAAM,kBACNwD,SAAU,eACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,YACRC,MAAO,YACPC,KAAM,YACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,WACTC,QAAS,CACPpE,KAAM,cACNqE,YAAa,qCACbC,GAAI,kCAGR,CACEpE,GAAI,EACJF,KAAM,2BACNwD,SAAU,gBACVC,MAAO,uBACPC,QAAS,CACPC,OAAQ,mBACRC,MAAO,YACPC,KAAM,YACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,eACTC,QAAS,CACPpE,KAAM,kBACNqE,YAAa,gCACbC,GAAI,kCAGR,CACEpE,GAAI,EACJF,KAAM,kBACNwD,SAAU,WACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,aACRC,MAAO,YACPC,KAAM,iBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,uBACPC,QAAS,aACTC,QAAS,CACPpE,KAAM,gBACNqE,YAAa,wCACbC,GAAI,qCAGR,CACEpE,GAAI,GACJF,KAAM,qBACNwD,SAAU,iBACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,kBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,cACTC,QAAS,CACPpE,KAAM,aACNqE,YAAa,oCACbC,GAAI,+BC3NJC,ECPQ,CACZ,CACE7C,OAAQ,EACRxB,GAAI,EACJG,MAAO,qBACPC,WAAW,GAEb,CACEoB,OAAQ,EACRxB,GAAI,EACJG,MAAO,qCACPC,WAAW,IDJYe,KAAI,SAAAC,GAAI,kCAC9BA,GAD8B,IAEjCd,KAAMmC,EAAM6B,MAAK,SAAAhE,GAAI,OAAIA,EAAKN,KAAOoB,EAAKI,eAwB7B+C,EArBH,WAAO,IAAD,EACSC,mBAASH,GADlB,mBACTzD,EADS,KACH6D,EADG,KAYhB,OACE,yBAAK3D,UAAU,OACb,6CACA,kBAAC,EAAD,CAAS2B,MAAOA,EAAOF,QAbX,SAACnB,GACfqD,GAAS,SAAAlD,GAAK,4BACRA,GADQ,4BAEPH,GAFO,IAGVpB,GAAIuB,EAAMA,EAAMmD,OAAS,GAAG1E,GAAK,EACjCM,KAAMmC,EAAM6B,MAAK,SAAAhE,GAAI,OAAIA,EAAKN,KAAOoB,EAAKI,oBAS5C,kBAAC,EAAa,CAAEZ,WE1BtB+D,IAASnC,OAAO,kBAAC,EAAD,MAASoC,SAASC,eAAe,W","file":"static/js/main.e7ef05b5.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const userShape = PropTypes.shape({\n  name: PropTypes.string,\n  id: PropTypes.number,\n});\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport { todoShape } from './propTypes/todoShape';\n\nconst TodoItem = ({ title, completed, user }) => (\n  <Table.Row warning>\n    <Table.Cell>{user.name}</Table.Cell>\n    <Table.Cell>{completed ? 'Completed' : 'In process'}</Table.Cell>\n    <Table.Cell>{title}</Table.Cell>\n  </Table.Row>\n);\n\nTodoItem.propTypes = todoShape.isRequired;\n\nexport default TodoItem;\n","import PropTypes from 'prop-types';\nimport { userShape } from './userShape';\n\nexport const todoShape = PropTypes.shape({\n  id: PropTypes.number,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n  user: userShape,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport TodoItem from './TodoItem';\nimport { todoShape } from './propTypes/todoShape';\n\nconst TodoList = ({ list }) => (\n  <Table inverted className=\"ui green inverted table\" selectable>\n    <Table.Header>\n      <Table.Row>\n        <Table.HeaderCell>Person</Table.HeaderCell>\n        <Table.HeaderCell>Completed</Table.HeaderCell>\n        <Table.HeaderCell>Task</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n    <Table.Body>\n      {list.map(todo => <TodoItem key={todo.id} {...todo} />)}\n    </Table.Body>\n  </Table>\n);\n\nTodoList.propTypes = {\n  list: PropTypes.arrayOf(todoShape).isRequired,\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Container } from 'semantic-ui-react';\nimport { userShape } from './propTypes/userShape'; // ?\n\nclass NewTodo extends Component {\n  state = {\n    userId: 0,\n    title: '',\n    isUserUndefined: false,\n    isTitleUndefined: false,\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    if (name === 'title') {\n      const title = value.replace(/[^\\w\\s]/, '').slice(0, 30);\n\n      this.setState({\n        title, isTitleUndefined: false,\n      });\n    } else {\n      this.setState({\n        [name]: +value, isUserUndefined: false,\n      });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState(({ userId, title }) => {\n      const errors = {};\n\n      errors.isTitleUndefined = title.trim() === '';\n      errors.isUserUndefined = userId === 0;\n\n      if (!errors.isTitleUndefined && !errors.isUserUndefined) {\n        this.props.addTodo({\n          userId,\n          title,\n          completed: false,\n        });\n\n        return {\n          title: '',\n          userId: 0,\n        };\n      }\n\n      return errors;\n    });\n  }\n\n  render = () => {\n    const { users } = this.props;\n    const { userId, title, isUserUndefined, isTitleUndefined } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Button className=\"form__button\" type=\"submit\">Add</Form.Button>\n        <Form.Group widths=\"equal\">\n          <Container className=\"form__inner\">\n            {isTitleUndefined && (\n              <span className=\"form__error\">Please enter the title</span>\n            )}\n            <Form.Field\n              control=\"input\"\n              name=\"title\"\n              placeholder=\"Add New Todo\"\n              onChange={this.handleChange}\n              value={title}\n            />\n          </Container>\n          <Container className=\"form__inner\">\n            {isUserUndefined && (\n              <span className=\"form__error\">Please choose a user</span>\n            )}\n            <Form.Field\n              control=\"select\"\n              name=\"userId\"\n              onChange={this.handleChange}\n              value={userId}\n            >\n              <option value={0}>Choose a user</option>\n              {users.map(({ name, id }) => (\n                <option key={id} value={id}>\n                  {`${id}. ${name}`}\n                </option>\n              ))}\n            </Form.Field>\n          </Container>\n        </Form.Group>\n      </Form>\n    );\n  };\n}\n\nNewTodo.propTypes = {\n  users: PropTypes.arrayOf(userShape).isRequired,\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default NewTodo;\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React, { useState } from 'react';\nimport TodoList from './components/TodoList';\nimport NewTodo from './components/NewTodo';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.scss';\n\nimport users from './api/users';\nimport todos from './api/todos';\n\nconst preparedTodo = todos.map(todo => ({\n  ...todo,\n  user: users.find(user => user.id === todo.userId),\n}));\n\nconst App = () => {\n  const [list, setTodos] = useState(preparedTodo);\n  const addTodo = (todo) => {\n    setTodos(state => (\n      [...state, {\n        ...todo,\n        id: state[state.length - 1].id + 1,\n        user: users.find(user => user.id === todo.userId),\n      }]\n    ));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <NewTodo users={users} addTodo={addTodo} />\n      <TodoList {...{ list }} />\n    </div>\n  );\n};\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}